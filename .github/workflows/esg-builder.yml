---
name: ESG_Oracle-Builder

on:
  # Trigger at every push. Action will also be visible from Pull Requests to main
  push: # Comment this line to trigger action only on pull-requests (not recommended if you don't pay for GH Actions)
    paths:
      - "**/esg_oracle"
  workflow_dispatch:

env:
  IMAGE_REPO: 5irechain
  IMAGE_VERSION: ${{ github.event.release.tag_name
  CARGO_NET_GIT_FETCH_WITH_CLI: true

concurrency:
  group: ${{ github.actor }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  ########################################################################
  # Build and Publish the Docker Image with the latest codebase          #
  # p.s: maybe this can be removed in favour of code_builder             #
  ########################################################################
  artifact_build_and_push:
    name: Build and Release the ESG Oracle Docker Image
    runs-on: [self-hosted]
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: "${{ secrets.DEPLOY_KEY }}"

      - name: Docker Build
        id: docker_build
        run: |
          docker build --ssh default -f esg_oracle/Dockerfile -t ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}} .

      - name: Docker Tag
        id: docker_tag
        run: |
          if [[ "${{ env.IMAGE_VERSION }}" != "" ]]; then
            echo "Tagging image with Image Version: ${{ env.IMAGE_VERSION }}"
            docker tag ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}} ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_VERSION }}
          fi
          echo "Tagging image with Image Commit ID: ${{ github.sha }}"
          docker tag ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}} ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.sha }}
          echo "Tagging image with Image Run Number: ${{ github.run_number }}"
          docker tag ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}} ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.run_number }}

      - name: Docker Push
        id: docker_push
        run: |
          if [[ "${{ env.IMAGE_VERSION }}" != "" ]]; then
            docker push ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ env.IMAGE_VERSION }}
          fi
          docker push ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.sha }}
          docker push ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:latest
          docker push ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.run_number }}

  ###################
  # Update manifest #
  ###################
  update_manifest:
    name: Update the manifests
    runs-on: self-hosted
    if: "contains(needs.isRelease.outputs.commit_message, 'release')"
    needs: artifact_publish
    steps:
      - uses: actions/checkout@v2
        with:
          repository: "5ire-org/5ire-infrastructure"
          token: "${{ secrets.GITHUB_TOKEN }}"
          ref: "develop"

      - name: Update the manifest files - local
        run: |
          sed -i "s|${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}.*|${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.run_number }}|g" ${{ github.workspace }}/argocd-charts/${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}/esg_oracle.yml;

      - name: Update the manifest files - remote
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: "develop"
          commit_message: "update ${{ env.IMAGE_REPO }}/${{ env.IMAGE_NAME}}:${{ github.run_number }} image for ${{ github.repository }} manifest"
          commit_options: "--signoff"
          file_pattern: "*.yaml"
